name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
#          token: ${{secrets.PYTHON_POETRY_CI_EXAMPLE_GITHUB_TOKEN}}

      - name: List Git Tags (Sorted by Date)
        run: |
          echo "Available Git Tags (Sorted by Date):"
          git for-each-ref --sort=creatordate --format '%(creatordate): %(refname:short)' refs/tags


      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.5

      - name: Install Poetry
        run: |
          python -m pip install poetry==1.8.2
      - name: Configure Poetry
        run: |
          python -m poetry config virtualenvs.in-project true
      - name: Cache the virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          python -m poetry install
          poetry config virtualenvs.create false
          poetry install
      - name: View Semantic Release Version
        run: |
          poetry run semantic-release --noop version
        env:
          GH_TOKEN: ${{secrets.PYTHON_POETRY_CI_EXAMPLE_GITHUB_TOKEN}}
      - name: Python Semantic Release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
          poetry run semantic-release publish
        env:
          GH_TOKEN: ${{secrets.PYTHON_POETRY_CI_EXAMPLE_GITHUB_TOKEN}}
